FOR参数F的选项delims与tokens (2011-02-16 15:03:38)
转载▼
	

标签： for if delims tokens  分类： DOS批处理(随笔）  
 

FOR参数F的选项delims与tokens


 本篇为《FOR入门与精通秘籍》的补充内容。

在For命令语句的参数F中，最难理解的就是Delims和Tokens两个选项，本文简单的做一个比较和总结。

“For /f”常用来解析文本，读取字符串。分工上，delims负责切分字符串，而tokens负责提取字符串。如果把字符串当作蛋糕，Delims像刀子，用来切蛋糕，tokens像叉子，用来取切好的蛋糕。下面我们用实例来进行理解。


 把以下内容保存为文本文件“歌曲列表.txt”，注意扩展名为“.txt”：

序号、歌手名-歌曲名.后缀名

1、饶天亮-玫瑰爱人.wma

2、高一首-我不愿错过.mp3

3、黃凱芹-傷感的戀人.MP3

4、黄灿-黄玫瑰.lrc

5、黎姿-如此这般的爱情故事.mp3


 代码1：显示全部内容

@echo off

for /f %%i in (歌曲列表.txt) do echo %%i

pause>nul

运行结果：

序号、歌手名-歌曲名.后缀名

1、饶天亮-玫瑰爱人.wma

2、高一首-我不愿错过.mp3

3、黃凱芹-傷感的戀人.MP3

4、黄灿-黄玫瑰.lrc

5、黎姿-如此这般的爱情故事.mp3


 讲解：

如果不使用参数“/f”，运行结果只显示括号里的文字字符“歌曲列表.txt”，而不能读取文本文件“歌曲列表.txt”中的内容。可见，“/f”是解析文本字符串的好工具。


 一、delims

假如只要序号，不要歌手名、歌曲名和后缀名，如何办到？

代码2：默认提取第一列

@echo off

for /f    "delims=、"   %%i in (歌曲列表.txt) do echo %%i

pause>nul

运行结果：

序号

1

2

3

4

5


 讲解：

"delims=、"表示定义顿号“、”为分隔符，并用该分隔符“、”切分文本字符串。字符串就是“歌曲列表.txt”里的内容，也就是文件里的文字和标点符号。

该顿号是原文中就有的。除了顿号“、”，原文中还有减号“-”和点号“.”，因此你也可以用它们来做分隔符。


 代码3：用减号“-”做分隔符

@echo off

for /f    "delims=-"   %%i in (歌曲列表.txt) do echo %%i

pause>nul

运行结果：

序号、歌手名

1、饶天亮

2、高一首

3、黃凱芹

4、黄灿

5、黎姿


 讲解：

因为，当减号“-”被用做分隔符时，每行内容被减号“-”分隔成前后两半，默认只显示前半部分，而后半部分连同分隔符减号“-”都被忽略（省略）了。


 代码4：用点号“.”做分隔符

@echo off

for /f    "delims=."   %%i in (歌曲列表.txt) do echo %%i

pause>nul

运行结果：

序号、歌手名-歌曲名

1、饶天亮-玫瑰爱人

2、高一首-我不愿错过

3、黃凱芹-傷感的戀人

4、黄灿-黄玫瑰

5、黎姿-如此这般的爱情故事


 讲解：

默认情况下，单纯使用delims而不用tokens时，只显示第一个分隔符前的内容，第一个分隔符和第一个分隔符后面的内容将被忽略。


 代码5：定义多个分隔符

@echo off

for /f    "delims=、-."   %%i in (歌曲列表.txt) do echo %%i

pause>nul

运行结果：

序号

1

2

3

4

5


 讲解：

原因是，当定义顿号“、”、减号“-”和点号“.”三个标点符号为分隔符后，原文被分隔成四个部分。

如第二行“1、饶天亮-玫瑰爱人.wma”将被分隔成“1”、“饶天亮”、“玫瑰爱人”和“wma” 四个部分。

从第一行到最后一行，每行的每个部分对应下来相当于一个竖列。因此，原文就有“序号”、“歌手名”、“歌曲名”、“后缀名”四列。

一般情况下，只读取第一列的内容。后面的内容需要用tokens选项提取。

代码：

@echo off

for /f "delims=：" %%a in (易经.txt) do echo %%a

pause>nul


 运行结果将显示第一小节（列）的内容。

原因是没有定义显示的列，默认情况下忽略第一个分隔符（冒号）后面的内容。


 要显示列，需要用到下节学习的tokens。如：

@echo off

for /f "tokens=1,2 delims=：" %%a in (易经.txt) do echo %%a %%b

pause>nul


 你也可以使用冒号（：）和逗号（，），写法是“delims=：，”（使用英文双引号）。原文中的每行文字将被作为分隔符的冒号和逗号分成多个小节：（不知道百度怎么搞的，竟然说我的表格超载！省略了）


 （三）delims=符号集 分隔符

 

附：谢谢大家对本教程的热爱和支持，经过不懈的努力，我对该教程进行了重新修改，有时间放上来与大家分享，敬请关注本空间《甲兵时代》原创作品！


 格式：

FOR /F "Delims=符号集" %%I       IN (Command1)   DO Command2

用法：

一句话总结：忽略分隔符，切分字符串。

1）以文本中的标点符号来定义分隔符。分隔符通常就是空格键和跳格键。

2）被定义为分隔符的标点符号将被忽略（隐藏），如果分隔符后面还有内容，默认该分隔符与该内容将被一同忽略，除非使用tokens定义显示。因此，该命令可以用来屏蔽标点符号和提取第一列的信息。

3）被定义的分隔符前后内容将变成独立的小节（或列），这些小节可以为FOR命令编辑，比如使用tokens提取。


 注意：

符号集，指用做分隔符的标点符号可以是一个，也可以是多个。

当delims定义多个分隔符时，符号之间不用空格，用做分隔符的空格要放到最后。


 首先要弄清楚分隔符。分隔符就是用delims指定的标点符号了，该标点符号就是文本中的标点符号。注意：这里的分隔符并非文本中的所有标点符号，而是指被delims指定的标点符号。如下图

其次要弄清楚分节、分列。我们把每行两个分隔符之间的文字内容称为小节、列。注意：是分隔符之间，而非标点符号之间。如下图。


 例：《易经·乾》的开头：

  乾：元，亨，利，贞。

       初九：潜龙，勿用。

       九二：见龙再田，利见大人。

       九三：君子终日乾乾，夕惕若，厉无咎。

       九四：或跃在渊，无咎。

       九五：飞龙在天，利见大人。

       上九：亢龙有悔。

       用九：见群龙无首，吉。

将该内容保存到为文本文件“易经.txt”，下面我们做实验。


 如果使用Delims来定义分隔符，你可以使用原文中的冒号（：），写法是“Delims=：”（使用英文双引号）。冒号作为分隔符后，冒号前后的内容被分成两个小节：

 

 第一小节（列）
  分隔符
  第二小节（列）
  
 第一行
  乾
  ：
  元，亨，利，贞。
  
 第二行
  初九
  ：
  潜龙，勿用。
  
 第三行
  九二
  ：
  见龙再田，利见大人。
  
 第四行
  九三
  ：
  君子终日乾乾，夕惕若，厉无咎。
  
 第五行
  九四
  ：
  或跃在渊，无咎。
  
 第六行
  九五
  ：
  飞龙在天，利见大人。
  
 第七行
  上九
  ：
  亢龙有悔。
  
 第八行
  用九
  ：
  见群龙无首，吉。
  
 备注：
  默认只显示第一列
  默认忽略分隔符
  默认忽略第一个分隔符后的内容
  

 

 

代码：

@echo off

for /f "delims=：，" %%a in (易经.txt) do echo %%a

pause>nul

运行结果将显示第一小节（列）的内容。

没有定义列的时候，默认只显示第一列，忽略分隔符和第一个分隔符后的内容。


 例如：文本“静夜思.txt”的内容是：

床前明月光，疑是地上霜，举头望明月，低头思故乡。


 文本中有四句古诗，诗句之间用逗号分隔。古诗原本是没有标点符号的，标点符号是后人才加上去的。逗号在语文上是语气暂停的意思，其实就是用来分隔语句意思以便于阅读和理解。Delims=，的意思就是提取逗号做分隔符，并以此将诗句分成四个小列或小节。

 

 第一列
  分隔符
  第二列
  分

隔

符
  第三列
  分

隔

符
  第三列
  
 第一行
  床前明月光
  ，
  疑是地上霜
  ，
  举头望明月，
  ，
  低头思故乡。
  

 

如果我要用for将四句诗都显示到屏幕上，不需要任何参数即能实现：

@echo off

for /f %%i in (静夜思.txt) do echo %%i

pause>nul


 如果我只要“床前明月光”这句话，就需要delims帮忙了：

@echo off

for /f "delims=，" %%i in (静夜思.txt) do echo %%i

pause>nul


 讲解：

delims=后面跟了一个逗号，表示用原文中的逗号作为分隔符（划分的方法）将古诗分成四个小节。默认情况下，delims只显示分隔符前的第一小节，分隔符通常被忽略掉。显示其他小节的诗句要用到列提取命令“tokens”。


 仍用前面eol里的文本“a.txt”做试验。

例：如何只显示每行的第一个标点前的内容？

@echo off

for /f "eol=: delims=,， " %%i in (a.txt) do echo %%i

pause>nul


 运行结果显示：

aaa

iii

eee

你好


 注意：

文本中有英文的点号和中文的逗号，点号要放在逗号前面。

符号集中（也就是=后面的标点符号），各个符号之间没有空格。

文本中用空格分隔的，符号集里中文逗号后面只有一个空格，且必须放到最后。

用于分隔的标点符号重复的一般只取一个做代表。

for默认是以空格和，：；/等标点符号作分割符的，所以要取得整行内容通常会用"delims="这样的形式来取消for的默认分割符。


 例：为什么第三行的iii后面的内容不见了？

@echo off

for /f    %%i in (a.txt) do echo %%i

pause>nul

讲解：

这里没有使用delim进行分隔，而带有空格的行空格后面的内容被忽略了，原因就是默认情况下，也就是没有即使没有用delims选项，for也会以空格作为分隔符，将空格后的内容屏蔽掉。


 使用delims的目的主要是通过切分字符串获得可编辑的字符串以便于进行下一步编辑。Delims好比一把西瓜刀，文本信息就好比西瓜，使用delims这把西瓜刀将文本这个西瓜切分成许多小块，这样吃起来就方便了。

如果你想吃其中的某一块，怎么办呢？直接用刀叉tokens提取就可以了。请看下节。


 练习：

1、请简单说说分隔符和标点符号的区别。

2、请举例说说delims的作用。

3、请用delims处理以下新闻标题：

第十六届中共中央组织结构图_中国共产党第十七次全国代表大会专题_新闻中心_新浪网.mht

4、请用delims处理以下网页标题：

关闭垃圾服务让XP系统运行更顺畅运行_系统 垃圾 服务 关闭 需要 内存 这个 共享 占用_中国网管联盟.mht

 

二、tokens

假如只要歌手名和歌曲名，不要序号和后缀名，如何办到？

代码6：提取单列

@echo off

for /f    "tokens=2 delims=、."   %%i in (歌曲列表.txt) do echo %%i

pause>nul

运行结果将显示：

歌手名-歌曲名

饶天亮-玫瑰爱人

高一首-我不愿错过

黃凱芹-傷感的戀人

黄灿-黄玫瑰

黎姿-如此这般的爱情故事

 

讲解：

用delims定义顿号“、”和点号“.”作为分隔符，将原文分成三部分。

如第六行“5、黎姿-如此这般的爱情故事.mp3”被分割成：

第一部分（第一列）：5

第二部分（第二列）：黎姿-如此这般的爱情故事

第三部分（第三列）：mp3

“tokens=2”表示用tokens提取第二列的字符串，即“黎姿-如此这般的爱情故事”。

没有被tokens定义提取的第一列和第三列将被忽略。

 

假如只要序号和歌曲名，而不要歌手名和后缀名，如何办到？

代码7：提取多列

@echo off

for /f    "tokens=1,3 delims=、-."   %%i in (歌曲列表.txt) do echo %%i   %%j

pause>nul

运行结果将显示：

序号   歌曲名

1  玫瑰爱人

2  我不愿错过

3  傷感的戀人

4  黄玫瑰

5  如此这般的爱情故事

 

讲解：

“delims=、-.”表示定义顿号、减号和点号为分隔符。

“tokens=1,3”表示只提取第一列和第三列。

“%%i %%j”对应于“token”后面的列数。有多少列就要有多少个输出变量，并且各变量中的字母存在先后顺序。

 

 

如何只提取文字，不要标点符号？

代码8：忽略分隔符

@echo off

for /f    "tokens=1,2-4 delims=、-."   %%i in (歌曲列表.txt) do echo %%i   %%j %%k %%l

pause>nul

运行结果：

序号   歌手名 歌曲名 后缀名

1  饶天亮 玫瑰爱人 wma

2  高一首 我不愿错过 mp3

3  黃凱芹 傷感的戀人 MP3

4  黄灿 黄玫瑰 lrc

5  黎姿 如此这般的爱情故事 mp3

 

讲解：

默认情况下，用做分隔符的标点符号将被忽略。

“tokens=1,2-4”中的“2-4”表示第二至第四列。

 

三、小结

 

“For /f”

一句话总结：解析文本，读取字符串。

 

Delims的语法：

FOR /F   "Delims=符号集"  %%I         IN (Command1)    DO Command2

一句话总结：忽略分隔符，切分字符串。

 

delims的意义包括两个方面：

 第一、指定原文中的标点符号作为分隔符。使得文本被划分为许多小部分，方便使用批处理命令读取和编辑。

 第二、读取第一个分隔符之前的内容。忽略第一个分隔符和分隔符后面的内容，如需读取和编辑，需要使用tokens等命令。

 

注意分隔符和标点符号的联系和区别。

分隔符就是原文中的标点符号，可以是一个标点符号也可以是多个。但原文中的标点符号不一定是分隔符。并且分隔符不一定是标点符号，字母和中文也是可以用作分隔符的。

分隔符需要定义，即用”delims=”来指定，等于号后面跟被用来做分隔符的标点符号，该标点符号来自原文。

当有多个标点符号被定义为分隔符时，标点符号之间没有空格。当用空格做分隔符时，空格应该放在其它用作分隔符的标点符号之后。

即使不使用delims，默认情况下，批处理也将空格作为分隔符。如文件名“Program Files”中含有空格时，批处理一般只读取空格前的“Program”，剩下的“Files”被忽略了。

例：

代码9：空格默认作为分隔符

@echo off

for /f "delims=" %%a in ("伟大的中国人民万岁 万岁 万万岁") do echo %%a

pause>nul

运行结果：

伟大的中国人民万岁 万岁 万万岁

讲解：

“delims=”等号后面没有空格，代表取消默认以空格作为分隔符，相当于“tokens=*”，提取全部字符；等号后面有空格时表示定义空格为分隔符，此时delims可以省略。

批处理默认空格是分隔符，分隔符会隐藏第一个分隔符后面的所有内容。为了显示完整的信息，所以有必要取消该功能。

因此，当文件名或路径中含有空格时，需要用双引号括住。如果不使用双引号，括号内的内容将被当做文件名，如果文件名不存在，将提示“系统找不到……”。

如果不使用“delims=”，即使使用双引号，也只能显示第一个空格前面的字符串，后面的字符串将被默认忽略。

 

 

Tokens的语法：

FOR /F   "tokens=x,y,m-n"  %%I         IN (Command1)    DO Command2

一句话总结：提取列。

 

Tokens的意义就是，提取指定的列。

注意列与句的联系与区别。

文本内容由许多文字字符串组成，它们被标点符号分隔，两个标点符号之间的语句我们称为“句子”。

当标点符号被“tokens=”指定为分隔符之后，文字将被分成多个部分。对应的每行的每个部分我们称之为“列”。

一列可能是一个句子，也可能包含多个句子，视delims定义的标点符号而定。

其它方面：关于“行”的提取，前面做过一个很简单的：
     @echo off
     del _test.txt
     set /p p=请输入要文本路径：
     findstr /n .* %p%>>_test.txt
     set /p m=请输入要定位的行：
     echo.
     for /f "tokens=1,* delims=:" %%a in ('findstr /b   "%m%"   _test.txt') do if %%a==%m% echo %%b
     echo.
 
